{"version":3,"sources":["main.js"],"names":["html","document","getElementById","style","querySelector","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";AAAA,IAAIA,EAAOC,SAASC,eAAe,QAE/BC,EAAQF,SAASG,cAAc,UAC/BC,EAAJ,gvCAoEIC,EAAU,GAKVC,EAAI,EAGJC,EAAO,SAAPA,IACAC,WAAW,WACW,OAAdJ,EAAOE,GACPD,GAAW,OACU,MAAdD,EAAOE,GAEdD,GAAW,QAGXA,GAAWD,EAAOE,GAEtBP,EAAKU,UAAYJ,EACjBH,EAAMO,UAAYL,EAAOM,UAAU,EAAGJ,GACtCK,OAAOC,SAAS,EAAE,MAClBb,EAAKa,SAAS,EAAE,MACZN,EAAIF,EAAOS,OAAS,IAEpBN,IACAD,MAEL,KAEPC","file":"main.d472a76f.js","sourceRoot":"..\\src","sourcesContent":["let html = document.getElementById('html')\r\n// 写样式\r\nlet style = document.querySelector('#style')\r\nlet string = `\r\n/*你好，我是一名前端切图狗\r\n接下来我要加样式了\r\n首先加一个div\r\n我要加的样式是*/\r\n#div1{\r\n    width:30rem;\r\n    height:30rem;\r\n}\r\n/*\r\n接下来我吧div变成一个八卦\r\n注意看好了\r\n首先把div变成一个圆\r\n*/\r\n#div1{\r\n    border-radius:50%;\r\n    box-shadow:0 0 3px rgba(0,0,0,.5);\r\n    border:none;\r\n}\r\n/*\r\n八卦是阴阳两极之相\r\n我们先绘制一下阴阳两极\r\n*/\r\n#div1{\r\n    background: linear-gradient(90deg, rgba(0,0,0,1) 0%, \r\n    rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, \r\n    rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/*\r\n两仪成\r\n*/\r\n#div1::before {\r\n    width:15rem;\r\n    height:15rem;\r\n    top:0px;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#000;\r\n    border-radius:50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, \r\n    rgba(255,255,255,1) 20%, rgba(0,0,0,1) 20%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after {\r\n    width:15rem;\r\n    height:15rem;\r\n    bottom:0px;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#fff;\r\n    border-radius:50%;\r\n    background:radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 0%,\r\n    rgba(0,0,0,1) 20%, rgba(255,255,255,1) 20%, rgba(255,255,255,1) 100%);\r\n}\r\n/*\r\n太极起\r\n*/\r\n@keyframes rotate {\r\n    0%{\r\n      transform: rotate(0deg);\r\n    }\r\n    100%{\r\n      transform: rotate(360deg);\r\n    }\r\n}\r\n#div1{\r\n    animation: rotate 3s linear infinite;\r\n}\r\n`;\r\nlet string2 = ''\r\n// 这个replace只会把第一个回车变成换行\r\n// 我们要用到正则表达式了\r\n// 然后又发现了一个bug 他会打出<来\r\n// string=string.replace(/\\n/g,\"<br>\")\r\nlet n = 0\r\n// 通过setTimeout模拟了setInterval\r\n// 这样做的好处是可以随时停止\r\nlet step = () => {\r\n    setTimeout(() => {\r\n        if (string[n] === '\\n') {\r\n            string2 += '<br>'\r\n        } else if (string[n] === ' ') {\r\n            // 如果是空格\r\n            string2 += '&nbsp'\r\n        } else {\r\n            // 如果不是回车就照搬\r\n            string2 += string[n]\r\n        }\r\n        html.innerHTML = string2   \r\n        style.innerHTML = string.substring(0, n)\r\n        window.scrollTo(0,9999)\r\n        html.scrollTo(0,9999)\r\n        if (n < string.length - 1) {\r\n            // 不是最后一个\r\n            step();\r\n            n++\r\n        } else { }\r\n    }, 30)\r\n}\r\nstep()\r\n"]}